---
- name: Update Thoth's Kebechet Bot ConfigMap and Secret
  tags:
    - openshift
    - thoth
    - kebechet
    - bot
    - devops

  hosts: localhost
  vars:
    OPENSHIFT_MASTER_URL: "{{ lookup('env','OCP_URL') }}"
    OPENSHIFT_AUTH_TOKEN: "{{ lookup('env','OCP_TOKEN') }}"
    # THOTH_FRONTEND_NAMESPACE should be provided via command like argument
    # THOTH_INFRA_NAMESPACE should be provided via command like argument
    # GITHUB_AUTH_TOKEN should be provided via command like argument
    # KEBECHET_CONFIG_FILENAME should be provided via command like argument
    
  gather_facts: false
  connection: local

  tasks:
  - name: "make sure to use project {{ THOTH_INFRA_NAMESPACE }}"
    command: "oc project {{ THOTH_INFRA_NAMESPACE }}"
    register: project_exists
    ignore_errors: true
    changed_when: False

  - name: "check if required Secret 'kebechet-github' exists"
    command: "oc get secret --namespace {{ THOTH_INFRA_NAMESPACE }} kebechet-github"
    register: secret_exists
    ignore_errors: True

  - name: delete Secret
    command: oc delete secret --namespace "{{ THOTH_FRONTEND_NAMESPACE }}" kebechet-github
    when: secret_exists is succeeded

  - name: create Secret with SSH Key and Access Token for GitHub
    command: oc create secret --namespace "{{ THOTH_FRONTEND_NAMESPACE }}" generic kebechet-github \
      --from-file=ssh-privatekey=../kebechet_github \
      --from-literal=token="{{ GITHUB_AUTH_TOKEN }}"      
      --type=kubernetes.io/ssh-auth

  - name: "check if required ConfigMap 'kebechet' exists"
    command: "oc get configmap --namespace {{ THOTH_INFRA_NAMESPACE }} kebechet"
    register: configmap_exists
    ignore_errors: True

  - name: delete ConfigMap
    command: oc delete configmap --namespace "{{ THOTH_FRONTEND_NAMESPACE  }}" kebechet
    when: configmap_exists is succeeded

  - name: create ConfigMap
    command: oc create configmap --namespace "{{ THOTH_FRONTEND_NAMESPACE  }}" kebechet \
      --from-file=thoth=../config/thoth.yaml